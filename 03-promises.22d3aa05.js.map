{"mappings":"iiBAAA,IAAAA,EAAAC,EAAA,SAEA,SAASC,EAAcC,EAAUC,GACzB,OAAO,IAAIC,SAAQ,SAACC,EAASC,GAC7B,IAAMC,EAAgBC,KAAKC,SAAW,GACtCC,YAAW,WACHH,EACAF,EAAQ,CAAEH,WAAUC,UAEpBG,EAAO,CAAEJ,WAAUC,S,GAExBA,E,IAIX,IAAMQ,EAAO,CACTR,MAAOS,SAASC,cAAc,kBAC9BC,KAAMF,SAASC,cAAc,iBAC7BE,OAAQH,SAASC,cAAc,mBAC/BG,KAAMJ,SAASC,cAAc,SAC7BI,IAAKL,SAASC,cAAc,QAmBhCF,EAAKK,KAAKE,iBAAiB,UAhB3B,SAAsBC,GAClBA,EAAMC,iBAGN,IAFA,IAAIC,EAAQC,OAAOX,EAAKR,MAAMoB,OAErBC,EAAW,EAAGA,GAAYb,EAAKI,OAAOQ,MAAOC,IAElDvB,EAAcuB,EAAUH,GACvBI,MAAK,SAAAC,G,IAAGxB,EAAQwB,EAARxB,SAAUC,EAAKuB,EAALvB,MAAawB,EAAA5B,GAAS6B,OAAOC,QAAQ,uBAAwCC,OAAf5B,EAAS,QAAY4B,OAAN3B,EAAM,O,IACnG4B,OAAI,SAAAL,G,IAAGxB,EAAQwB,EAARxB,SAAUC,EAAKuB,EAALvB,MAAawB,EAAA5B,GAAS6B,OAAOI,QAAQ,sBAAuCF,OAAf5B,EAAS,QAAY4B,OAAN3B,EAAM,O,IAEpGkB,GAAOC,OAAOX,EAAKG,KAAKS,OAG9BZ,EAAKK,KAAKiB,O","sources":["src/js/03-promises.js"],"sourcesContent":["import Notiflix from 'notiflix';\n\nfunction createPromise(position, delay) {\n        return new Promise((resolve, reject) => {\n        const shouldResolve = Math.random() > 0.3;\n        setTimeout(() => {\n            if (shouldResolve) {\n                resolve({ position, delay })\n            } else {\n                reject({ position, delay })\n            }\n        }, delay);\n    });\n};\n\nconst refs = {\n    delay: document.querySelector('[name=\"delay\"]'),\n    step: document.querySelector('[name=\"step\"]'),\n    amount: document.querySelector('[name=\"amount\"]'),\n    form: document.querySelector('.form'),\n    btn: document.querySelector('btn'),\n};\n\nfunction onSubmitForm(event) {\n    event.preventDefault();\n    let delay = Number(refs.delay.value);\n        \n    for (let position = 1; position <= refs.amount.value; position ++) {\n    \n        createPromise(position, delay)\n        .then(({ position, delay }) => {Notiflix.Notify.success(`✅ Fulfilled promise ${position} in ${delay} ms`);})\n        .catch(({ position, delay }) => {Notiflix.Notify.failure(`❌ Rejected promise ${position} in ${delay} ms`);});\n\n        delay += Number(refs.step.value);\n    };\n\n    refs.form.reset();\n};\n\nrefs.form.addEventListener('submit', onSubmitForm);\n\n\n// import Notiflix from 'notiflix';\n\n// function createPromise(position, delay) {\n//         return new Promise((resolve, reject) => {\n//         const shouldResolve = Math.random() > 0.3;\n//         setTimeout(() => {\n//             if (shouldResolve) {\n//                 resolve({ position, delay })\n//             } else {\n//                 reject({ position, delay })\n//             }\n//         }, delay);\n//     });\n// };\n\n// const refs = {\n//     delay: document.querySelector('[name=\"delay\"]'),\n//     step: document.querySelector('[name=\"step\"]'),\n//     amount: document.querySelector('[name=\"amount\"]'),\n//     form: document.querySelector('.form'),\n//     btn: document.querySelector('btn'),\n// };\n\n// function onSubmitForm(event) {\n//     event.preventDefault();\n        \n//     let promisesMass = [];\n    \n//     for (let i = 1; i <= refs.amount.value; i++) {\n//         const promiseObject = { position: i, delay: Number(refs.delay.value) + Number(refs.step.value * i) };\n//         promisesMass.push(promiseObject);\n//     };\n    \n//     const promises = promisesMass.map(({ position, delay }) => { createPromise(position, delay) });\n    \n//     Promise.all(promises)\n//     .then(({ position, delay }) => {Notiflix.Notify.success(`✅ Fulfilled promise ${position} in ${delay} ms`);})\n//     .catch(({ position, delay }) => {Notiflix.Notify.failure(`❌ Rejected promise ${position} in ${delay} ms`);});\n\n//     refs.form.reset();\n// };\n\n// refs.form.addEventListener('submit', onSubmitForm);\n\n\n\n\n"],"names":["$iU1Pc","parcelRequire","$ce04d3a99e08e73b$var$createPromise","position","delay","Promise","resolve","reject","shouldResolve","Math","random","setTimeout","$ce04d3a99e08e73b$var$refs","document","querySelector","step","amount","form","btn","addEventListener","event","preventDefault","delay1","Number","value","position1","then","param","$parcel$interopDefault","Notify","success","concat","catch","failure","reset"],"version":3,"file":"03-promises.22d3aa05.js.map"}